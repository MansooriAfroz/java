Q5B) Create class car, bike, airplane, create an aspect engine, create
method drive() in car, ride() in bike, fly in airplane, the engine aspect
has method enginestart() and enginestop(). When you run the
application the enginestart() method should execute before drive(),
ride() and fly() a enginestop() method should run after drive(), ride()
and fly() by using pointcuts.



CODE:
a. car.java
package something.pro2;
importorg.springframework.stereotype.Component;
@Component
public class car {
public void drive()
{
42
System.out.println("CAR STARTED DRIVING");
}
}
b. bike.java
package something.pro2;
import org.springframework.stereotype.Component;
@Component
public class bike {
public void ride()
{
System.out.println("Biker riding bike");
}
}
c. airplane.java
package something.pro2;
import org.springframework.stereotype.Component;
@Component
public class airplane {
public void fly()
43
{
System.out.println("Airplane Flying");
}
}
d. engine.java
package something.pro2;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Before; import
org.aspectj.lang.annotation.Pointcut; import
org.aspectj.lang.annotation.Aspect; import
org.springframework.context.annotation.EnableAspectJAutoProx y;
import org.springframework.stereotype.Component;
@Compon
ent
@Aspect
@EnableAspectJAutoProxy
public class engine {
@Before("getNamePointcut()")
public void enginestart()
{
System.out.println("Engine started");
}
@Pointcut("execution(public void drive())") public
void getNamePointcut(){}
@After("getNamePointcut1()")
public void enginestop()
{
44
System.out.println("Engine stopped");
}
@Pointcut("execution(public void fly())")
public void getNamePointcut1(){}
}
e. app.java
package something.pro2;
import
org.springframework.context.annotation.AnnotationConfigApplication
Context; import
org.springframework.context.support.AbstractApplicationContext;
public class App
{
public static void main( String[] args )
{
AbstractApplicationContext context = new
AnnotationConfigApplicationContext(AppConfig.class);
car c =
context.getBean("car",car.class);
c.drive();
45
bike b =
context.getBean("bike",bike.class);
b.ride();
airplane a =
context.getBean("airplane",airplane.class); a.fly();
}
}